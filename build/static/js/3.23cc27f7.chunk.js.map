{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","form","onFocus","console","log","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,wBCuD/BC,EApDG,SAACL,GACjB,MAAgCM,oBAAS,GAAzC,mBAAMC,EAAN,KAAiBC,EAAjB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,qCACA,cAAC,IAAD,CAAQE,KAAML,EAAYM,QAAS,SAACC,GAAD,MAAY,qCAC/C,cAAC,EAAD,UACE,uBAAMb,UAAWC,IAAQa,KAAMC,QAZV,WACvBC,QAAQC,IAAI,SACZV,GAAc,IAU8CW,SAvB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBb,EAAec,QAAQC,MACvCC,EAAcd,EAAaY,QAAQC,MAIzCxB,EAAM0B,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAe9C,UACGzB,EAAM6B,WACL,qBAAK5B,UAAWC,IAAQ4B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK9B,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK3B,OAEtC,sBAAKR,UAAWC,IAAQ8B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKzB,OAEpC,qBAAKV,UAAWC,IAAQoC,QAAxB,SACE,wBAAQC,QAxBc,WAE5B/B,GAAc,IAsBgCP,UAAU,MAAlD,kC,gBC7BKuC,UAhBE,WACb,IAAMC,EAAUC,cAElB,EAA4BC,YAAQC,KAA7BC,EAAP,EAAOA,YAAYC,EAAnB,EAAmBA,OACnBC,qBAAU,WACI,cAATD,GACCL,EAAQO,KAAK,aAEjB,CAACF,IAKD,OAAQ,cAAC,EAAD,CAAWjB,UAAoB,YAATiB,EAAoBpB,WAJ1B,SAACuB,GACtBJ,EAAYI","file":"static/js/3.23cc27f7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3zbyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__5dCWM\",\"loading\":\"QuoteForm_loading__2_sPE\",\"control\":\"QuoteForm_control__eLEkJ\",\"actions\":\"QuoteForm_actions__30DEH\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef,useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner'\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const[isEntering,setIsEntering]=useState(false)\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const focusFormHandler = () => {\n    console.log('Focus')\n    setIsEntering(true)\n  }\n  const finishEnteringHandler = () => {\n\n    setIsEntering(false)\n  }\n  return (\n    <>\n    <Prompt when={isEntering} message={(location)=>'Are you sure you want to leave?'}/>\n    <Card>\n      <form className={classes.form} onFocus={focusFormHandler} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button onClick={finishEnteringHandler} className='btn'>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from 'react-router-dom'\r\nimport { useEffect } from 'react'\r\nimport QuoteForm from '../components/quotes/QuoteForm'\r\nimport useHttp from '../hooks/use-http'\r\nimport {addQuote} from '../lib/api'\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n\r\n  const {sendRequest,status}= useHttp(addQuote);\r\n  useEffect(()=>{\r\n    if(status==='completed'){\r\n        history.push('/quotes')\r\n    }\r\n  },[status])\r\n    const addQuoteHandler = (quoteData) => {\r\n       sendRequest(quoteData);\r\n      \r\n    }\r\n    return (<QuoteForm isLoading={status==='pending'} onAddQuote={addQuoteHandler} />)\r\n}\r\n\r\nexport default NewQuote"],"sourceRoot":""}